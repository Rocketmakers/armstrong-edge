@use "sass:math";

// button.prototyping.scss

.arm-button {
  &[data-disabled='true'] {
    opacity: 0.5;
    pointer-events: none;
  }

  &:not(.arm-button-minimal) {
    box-shadow: $shadow-xsmall;
    color: $white;
    border-radius: $border-radius-small;
    padding: $spacing-xsmall;

    &[data-error='true'] {
      background-color: $color-negative;
    }

    .arm-status {
      .arm-icon.arm-status-error {
        color: $white;
      }
    }
  }

  .arm-status {
    .arm-spinner {
      .arm-icon {
        font-size: 0.75rem;
      }
    }
  }
}

// calendarDisplay.prototyping.scss

.arm-calendar-display-controls {
  .arm-select {
    box-shadow: none;

    &:focus-within {
      box-shadow: none;
    }
  }
}

.arm-calendar-date-grid-heading {
  color: $gray-light;
}

.arm-calendar-date-grid-day {
  box-shadow: none;
}

// calendarInput.prototyping.scss

.arm-calendar-input {
  .arm-input-wrapper-above,
  .arm-input-wrapper-below {
    max-height: 0;
  }

  &[data-calendar-open='true'] {
    .arm-input-wrapper-above,
    .arm-input-wrapper-below {
      max-height: 400px;
    }
  }
}

.arm-calendar-input-preview {
  font-size: 0.8rem;

  .arm-calendar-input-placeholder {
    color: $gray-medium;
  }
}

// calendarView.prototyping.scss

.arm-calendar-view {
  padding: $spacing-small;
  border-radius: $border-radius-small;
  box-shadow: $shadow-xsmall;
}

// characterLimit.prototyping.scss

.arm-character-limit {
  margin: $spacing-xsmall 0;

  &[data-exceeded='true'] {
    > p,
    > .arm-icon {
      color: $color-negative;
    }
  }
}

// checkboxInput.prototyping.scss

.arm-checkbox-input-checkbox {
  background-color: $white;
  border: $line-light;
  border-radius: $border-radius-small;
  color: $white;
}

.arm-checkbox-input {
  &[data-checked='true'] {
    .arm-checkbox-input-checkbox {
      background-color: $brand-primary;
      border-color: $brand-primary;
    }
  }
}

// checkboxInputList.prototyping.scss

.arm-checkbox-input-list-group-title {
  padding: $spacing-small 0 $spacing-xsmall 0;
  font-size: 0.75rem;
  text-transform: uppercase;
  color: $gray-medium;
}

.arm-checkbox-input-list {
  .arm-checkbox-input + .arm-checkbox-input {
    margin-top: $spacing-xxsmall;
  }
}

// dialog.prototyping.scss

.arm-dialog-wrapper {
  padding: $spacing-medium;
  cursor: pointer;
  animation: fade-in $transition-quick;
}

.arm-dialog {
  cursor: initial;
  border-radius: $border-radius-small;
}

.arm-dialog-inner {
  padding: $spacing-small;
}

.arm-dialog-top {
  padding: $spacing-small;
  border-bottom: $line-light;
}

// dropdownItems.prototyping.scss

.arm-dropdown-item {
  padding: $spacing-xxsmall $spacing-xsmall;
  transition: background-color $transition-quick, color $transition-quick;

  p {
    flex-grow: 1;
    font-size: 0.85rem;
  }

  &:hover {
    background-color: $gray-light;
  }

  &[data-keyboard-selected='true'] {
    background-color: $gray-light;
  }

  &[data-selected='true'] {
    background-color: $brand-primary;
    color: $white;

    &[data-keyboard-selected='true'] {
      opacity: 0.7;
    }
  }
}

.arm-dropdown-item-checkmark {
  font-size: 0.75rem;
  color: $white;
}

.arm-dropdown-items-no-item-text,
.arm-dropdown-items-group-title {
  font-size: 0.75rem;
  color: $gray-medium;
  padding: $spacing-xxsmall $spacing-xsmall;
}

.arm-dropdown-items-group-title {
  text-transform: uppercase;
}

@include screen-phone {
  .arm-dropdown-item {
    padding: $spacing-small $spacing-small;

    p {
      font-size: 1rem;
    }
  }
}

// errorMessage.prototyping.scss

.arm-error-message {
  color: $color-negative;
  font-size: 0.75rem;
  padding: $spacing-xsmall 0;
}

// group.prototyping.scss

.arm-group {
  position: relative;

  &[data-has-title='true'] {
    border-radius: $border-radius-small;
    border: $line-light;
    padding: $spacing-xsmall;
  }
}

.arm-group-title {
  background-color: $white;
  position: absolute;
  top: -0.5rem;
  left: $spacing-xsmall;
  font-size: 0.75rem;
  padding: 0 $spacing-xsmall;
}

// icon.prototyping.scss

.arm-icon {
  &[data-clickable='true'] {
    cursor: pointer;
  }
}

// iconButton.prototyping.scss

.arm-icon-button {
  justify-content: center;

  &:not(.arm-button-minimal) {
    @include circle(2rem);
  }

  > * {
    margin: initial;
  }

  .arm-icon,
  .arm-status .arm-spinner .arm-icon,
  .arm-status .arm-status-error {
    font-size: 1rem;
  }
}

// input.prototyping.scss

.arm-input.arm-input-base {
  &[disabled] {
    opacity: 0.5;
  }
}

.arm-input-base-input {
  width: 100%;
}

// inputWrapper.prototyping.scss

.arm-input-wrapper {
  box-shadow: $shadow-xsmall;
  border-radius: $spacing-xxsmall;
  border: 1px solid transparent;
  background-color: $white;

  &[data-disabled='true'] {
    opacity: 0.5;
  }

  &[data-error='true'] {
    border: 1px solid $color-negative;
  }

  &:focus-within {
    box-shadow: $shadow-small;
  }

  .arm-input-wrapper {
    box-shadow: none;
    border: 0;
    border-radius: 0;
  }
}

.arm-input-wrapper-above {
  border-bottom: $line-very-light;
}

.arm-input-wrapper-below {
  border-top: $line-very-light;
}

.arm-input-overlay-text {
  color: $gray-light;
  font-size: 0.75rem;
  white-space: nowrap;
}

// listBoxMulti.prototyping.scss

.arm-listbox-multi-content {
  .placeholder {
    font-size: 0.75rem;
  }
}

// modal.prototyping.scss

.arm-modal-wrapper {
  @include flex-centre-content;
}

.arm-modal {
  background-color: $white;
  box-shadow: $shadow-xsmall;
  border-radius: $border-radius-small;
}

// progressBar.prototyping.scss

.arm-progress-bar {
  border-radius: math.div($arm-progress-bar-thickness, 2);

  &[data-direction='up'],
  &[data-direction='down'] {
    min-height: 200px;
  }

  &[data-direction='left'],
  &[data-direction='right'] {
    min-width: 200px;
  }

  &[data-has-label='true'] {
    border-radius: math.div($arm-progress-bar-with-label-thickness, 2);

    .arm-progress-bar-progress {
      border-radius: math.div($arm-progress-bar-with-label-thickness, 2);
    }
  }
}

.arm-progress-bar-progress {
  border-radius: math.div($arm-progress-bar-thickness, 2);
}

// radioInput.prototyping.scss

.arm-radio-input label {
  user-select: none;

  .arm-radio-input-radio {
    border-radius: 50%;
    border: $line-light;

    &::after {
      transition: opacity $transition-quick;
      border-radius: 50%;
    }
  }
}

// radioInputList.prototyping.scss

.arm-radio-input-list-group-title {
  padding: $spacing-small 0 $spacing-xsmall 0;
  font-size: 0.75rem;
  text-transform: uppercase;
  color: $gray-medium;
}

.arm-radio-input-list {
  .arm-radio-input + .arm-radio-input {
    margin-top: $spacing-xxsmall;
  }
}

// rangeInput.prototyping.scss

.arm-range-input {
  .arm-range-input-track {
    .arm-range-input-track-inner {
      border-radius: $range-input-track-thickness * 0.5;
    }

    .arm-range-input-handle {
      background-color: $white;
      box-shadow: $shadow-small;
    }
  }
}

// sideMenu.prototyping.scss

.arm-side-menu {
  border-radius: 0;
}

// status.prototyping.scss

.arm-status {
  .arm-spinner {
    .arm-icon {
      font-size: 0.75rem;
    }
  }
}

.arm-status-error {
  color: $color-negative;
  font-size: 0.75rem;
}

// switchInput.prototyping.scss

.arm-switch-input {
  .arm-switch-input-inner {
    border-radius: $arm-switch-input-height * 0.5;
    background-color: $gray-light;

    &::after {
      background-color: $white;
      box-shadow: $shadow-small;
      border-radius: 50%;
    }
  }

  &[data-checked='true'] {
    .arm-switch-input-inner {
      background-color: $color-positive;
    }
  }
}

// tabControl.prototyping.scss

.arm-button.arm-tab-control-tab {
  font-weight: bold;
  border-top: $line transparent;
  border-bottom: $line-medium;
  color: $gray-medium;
  padding: $spacing-xsmall $spacing-small;

  &[data-is-current='true'] {
    border-color: $brand-primary;
    color: $black;
    border: $line-medium;
    border-bottom: transparent;
    border-top-left-radius: $border-radius-small;
    border-top-right-radius: $border-radius-small;
  }
}

@include screen-phone {
  .arm-button.arm-tab-control-tab {
    padding: $spacing-xsmall;
  }
}

// tabSelect.prototyping.scss

.arm-tab-select {
  .arm-button.arm-tab-control-tab {
    border-radius: 0;
    border: $line-light;

    &[data-is-current='true'] {
      background-color: $brand-primary;
      color: $white;
      border-color: $brand-primary;

      + .arm-button.arm-tab-control-tab {
        border-left: transparent;
      }
    }

    &:first-child {
      border-top-left-radius: $border-radius-small;
      border-bottom-left-radius: $border-radius-small;
    }

    &:last-child {
      border-top-right-radius: $border-radius-small;
      border-bottom-right-radius: $border-radius-small;
    }

    &:not(:last-child) {
      border-right: transparent;
    }
  }
}

// tag.prototyping.scss

.arm-tag {
  border-radius: $border-radius-small;
  background-color: $brand-primary;
  padding: $spacing-xxsmall $spacing-xsmall;
  color: $white;
  font-size: 0.9rem;
}

.arm-tag-close {
  font-size: 0.75rem;
}

// tagInput.prototyping.scss

.arm-tag-input {
  &[data-has-tags='true'] {
    .arm-input-wrapper-above .arm-auto-resizer-content,
    .arm-input-wrapper-below .arm-auto-resizer-content {
      padding: $spacing-xsmall;
    }
  }
}

// textAreaInput.prototyping.scss

.arm-input.arm-text-area-input {
  textarea {
    border: 0;
    padding: $spacing-xsmall 0;

    &:focus {
      border: 0;
    }
  }
}

// toast.prototyping.scss

.arm-toast-notification-toasts {
  padding: $spacing-small;

  > .arm-toast-notification {
    padding: math.div($spacing-xsmall, 2) 0;
  }
}

.arm-toast-notification {
  &[data-type='success'] {
    .arm-toast-notification-inner {
      background-color: $color-positive;
      color: $white;
    }
  }

  &[data-type='error'] {
    .arm-toast-notification-inner {
      background-color: $color-negative;
      color: $white;
    }
  }

  &[data-type='info'] {
    .arm-toast-notification-inner {
      background-color: $color-info;
      color: $white;
    }
  }

  &[data-type='warning'] {
    .arm-toast-notification-inner {
      background-color: $color-warning;
      color: $white;
    }
  }
}

.arm-toast-notification-inner {
  box-shadow: $shadow-small;
  padding: $spacing-xsmall;
  border-radius: $border-radius-small;
}

// tooltip.prototyping.scss

.arm-tooltip {
  border-radius: $border-radius-small;
  background-color: transparent;
  box-shadow: none;
  filter: drop-shadow($shadow-xsmall);
  display: flex;
  align-items: center;

  &[data-position='left'],
  &[data-position='above'] {
    &::after {
      @include init-pseudo;

      background-color: transparent;
      width: 0;
      height: 0;
    }
  }

  &[data-position='below'],
  &[data-position='right'] {
    &::before {
      @include init-pseudo;

      background-color: transparent;
      width: 0;
      height: 0;
    }
  }

  &[data-position='above'],
  &[data-position='below'] {
    flex-direction: column;
  }

  &[data-position='above'] {
    padding-bottom: $spacing-xsmall;

    &::after {
      border-left: $spacing-xsmall solid transparent;
      border-right: $spacing-xsmall solid transparent;
      border-top: $spacing-xsmall solid $white;
    }
  }

  &[data-position='below'] {
    padding-top: $spacing-xsmall;

    &::before {
      border-left: $spacing-xsmall solid transparent;
      border-right: $spacing-xsmall solid transparent;
      border-bottom: $spacing-xsmall solid $white;
    }
  }

  &[data-position='left'] {
    padding-right: $spacing-xsmall;

    &::after {
      border-top: $spacing-xsmall solid transparent;
      border-bottom: $spacing-xsmall solid transparent;
      border-left: $spacing-xsmall solid $white;
    }
  }

  &[data-position='right'] {
    padding-left: $spacing-xsmall;

    &::before {
      border-top: $spacing-xsmall solid transparent;
      border-bottom: $spacing-xsmall solid transparent;
      border-right: $spacing-xsmall solid $white;
    }
  }

  &::before,
  &::after {
    @include init-pseudo;

    background-color: transparent;
    width: 0;
    height: 0;
  }

  &[data-is-text='true'] {
    .arm-tooltip-inner {
      padding: $spacing-xsmall $spacing-small;
    }
  }
}

.arm-tooltip-inner {
  background-color: $white;
  padding: $spacing-xsmall;
  border-radius: $border-radius-small;
}

// validationErrors.prototyping.scss

.arm-validation-errors {
  padding-bottom: $spacing-small;
}

