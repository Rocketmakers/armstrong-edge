@use "sass:math";

// autoCompleteInput.basic.scss

.arm-autocomplete-input {
  width: 100%;
  max-width: $input-width;

  .arm-dropdown {
    width: 100%;
  }

  &[data-disabled='true'] {
    pointer-events: none;
  }
}

// autoCompleteInputMulti.basic.scss

.arm-autocomplete-input-multi {
  width: 100%;
  max-width: $input-width;

  .arm-dropdown {
    width: 100%;
  }

  .arm-input-wrapper {
    width: $input-width-large;
  }
}

// autoResizer.basic.scss

.arm-auto-resizer {
  width: var(--arm-auto-resizer-width);
  height: var(--arm-auto-resizer-height);
  overflow: hidden;
  transition: width $transition-quick, height $transition-quick;
}

.arm-auto-resizer-content {
  width: max-content;
  height: max-content;
}

// button.basic.scss

.arm-button {
  @include space-between-children-horizontal($spacing-xsmall);

  border: 0;
  outline: none;
  background-color: transparent;
  cursor: pointer;
  display: flex;
  align-items: center;
  user-select: none;
  padding: 0;

  &:not(.arm-button-minimal) {
    background-color: $brand-primary;
  }

  &.arm-button-minimal {
    color: inherit;
  }
}

// calendarDisplay.basic.scss

$arm-calendar-display-width: 300px !default;
$arm-calendar-display-date-circle: 1.6rem !default;
$arm-calendar-display-date-highlight-size: 0.4rem !default;

.arm-calendar-display {
  width: 100%;
  max-width: $arm-calendar-display-width;
  padding: $spacing-xsmall;
}

.arm-calendar-date-grid-headings {
  display: flex;
}

.arm-calendar-date-grid-days {
  display: flex;
  flex-wrap: wrap;
}

.arm-calendar-date-grid-day,
.arm-calendar-date-grid-heading,
.arm-calendar-date-grid-day-empty {
  flex-basis: 14.2857%;
  margin-bottom: $spacing-xxsmall;
  text-align: center;
}

.arm-calendar-display-controls {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-self: center;
  justify-content: space-between;
  margin-bottom: $spacing-xsmall;
  padding: 0 $spacing-xxsmall;

  .arm-icon-button {
    .arm-icon {
      padding: $spacing-xsmall;
      font-size: 0.6rem;
    }
  }
}

.arm-calendar-date-grid-day {
  @include flex-centre-content;

  position: relative;
  padding: $spacing-xsmall;

  p {
    position: relative;
    z-index: 3;
    margin: 0;
  }

  &::before {
    @include init-pseudo;
    @include absolute-centre-self;
    @include circle($arm-calendar-display-date-circle);

    z-index: 2;
    box-sizing: border-box;
  }

  &[data-selected='true'] {
    color: $white;

    &::before {
      background-color: $brand-primary;
    }
  }

  &[disabled='true'] {
    color: $gray-very-light;
  }

  &[data-today='true'] {
    &::before {
      border: $line-thick $brand-primary;
    }
  }

  &[data-range-middle='true'],
  &[data-range-start='true'],
  &[data-range-end='true'] {
    &::after {
      @include init-pseudo;

      z-index: 1;
      background-color: $brand-primary;
      opacity: 0.25;
      position: absolute;
      height: $arm-calendar-display-date-circle;
      left: 0;
      right: 0;
      top: 50%;
      transform: translateY(-50%);
    }
  }

  &[data-range-end='true'] {
    &::after {
      right: calc(50% - #{math.div($arm-calendar-display-date-circle, 2)});
      border-top-right-radius: math.div($arm-calendar-display-date-circle, 2);
      border-bottom-right-radius: math.div($arm-calendar-display-date-circle, 2);
    }
  }

  &[data-range-start='true'] {
    &::after {
      left: calc(50% - #{math.div($arm-calendar-display-date-circle, 2)});
      border-top-left-radius: math.div($arm-calendar-display-date-circle, 2);
      border-bottom-left-radius: math.div($arm-calendar-display-date-circle, 2);
    }
  }

  .arm-calendar-date-grid-day-highlight {
    @include circle($arm-calendar-display-date-highlight-size);

    position: absolute;
    left: 50%;
    bottom: 0;
    background-color: $brand-primary;
    transform: translateX(-50%);
  }
}

// calendarInput.basic.scss

.arm-calendar-select {
  margin-right: 0;
  flex: 1;

  .arm-dropdown {
    width: 100%;
  }

  .arm-input-wrapper {
    margin-right: 0;

    .arm-input-inner {
      margin-right: 0;

      input {
        width: 20px;
      }
    }
  }
}

.arm-calendar-input-between-inputs {
  color: $gray-light;
  margin-right: 0;
}

.arm-dropdown-content.arm-calendar-input-dropdown-content {
  min-width: $arm-calendar-display-width;

  .arm-calendar-display {
    max-width: none;
  }
}

.arm-calendar-input {
  width: 100%;
  max-width: $input-width;

  .arm-dropdown {
    width: 100%;

    .arm-input-wrapper-above,
    .arm-input-wrapper-below {
      .arm-calendar-display {
        max-width: none;
      }
    }
  }

  &[data-display-mode='calendar'] {
    cursor: pointer;

    .arm-input-inner {
      cursor: pointer;
    }
  }
}

.arm-calendar-input-preview {
  height: $input-height;
  display: flex;
  align-items: center;
}

// characterLimit.basic.scss

.arm-character-limit {
  display: flex;
  align-items: center;

  .arm-icon {
    margin-left: $spacing-xsmall;
  }
}

// checkboxInput.basic.scss

.arm-input.arm-checkbox-input {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-items: center;

  label {
    @include space-between-children-horizontal($spacing-xsmall);

    display: flex;
    align-items: center;
    cursor: pointer;
    user-select: none;
  }

  &[data-disabled='true'] {
    opacity: 0.5;
    pointer-events: none;
  }
}

.arm-checkbox-input-checkbox {
  @include square(1.3rem);

  flex-shrink: 0;
  cursor: pointer;
  position: relative;

  .arm-icon {
    @include absolute-fill;
    @include flex-centre-content;

    transition: opacity $transition-quick;
    pointer-events: none;
    font-size: 0.75rem;
  }
}

.arm-checkbox-input-checked-icon {
  opacity: 0;
}

.arm-checkbox-input-unchecked-icon {
  color: $black;
}

.arm-checkbox-input-checkbox-input {
  @include fill;

  cursor: pointer;
  appearance: none;
  border: 0;
  outline: none;
  background-color: transparent;
  padding: $spacing-xsmall;
  height: $input-height;

  &:checked ~ .arm-checkbox-input-checked-icon {
    opacity: 1;
  }

  &:checked ~ .arm-checkbox-input-unchecked-icon {
    opacity: 0;
  }
}

// codeInput.basic.scss

.arm-code-input {
  display: flex;
  align-items: center;

  > * {
    &:not(:last-child) {
      margin-right: $spacing-xsmall;
    }
  }

  .arm-input-base {
    width: auto;
    position: relative;

    .arm-input-base-input {
      width: calc(var(--arm-code-input-length, 1) * 0.5rem);
      text-align: center;
    }
  }
}

// dateTimeInput.basic.scss

.arm-input.arm-date-time-input {
  max-width: $input-width-large;

  .arm-calendar-input {
    flex-grow: 1;
    margin-right: 0;

    .arm-dropdown {
      width: auto;
    }
  }
}

// dialog.basic.scss

$dialog-width: 500px !default;
$dialog-height: calc(100vh - #{$spacing-medium * 2}) !default;

.arm-dialog {
  width: 100%;
  max-width: $dialog-width;
  max-height: $dialog-height;
  overflow: auto;
  position: relative;
}

.arm-modal.arm-dialog {
  padding: 0;
}

.arm-dialog-close-button {
  position: absolute;
  top: $spacing-small;
  right: $spacing-small;
}

.arm-dialog-top {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-items: center;
  justify-content: space-between;

  .arm-dialog-close-button {
    position: initial;
  }
}

.arm-dialog-title {
  flex-grow: 1;
}

.arm-confirmation-dialog-buttons {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin-top: $spacing-xsmall;

  .arm-button {
    margin-left: $spacing-xsmall;
  }
}

// dropdown.basic.scss

$arm-dropdown-min-width: 50px !default;
$arm-dropdown-height: 180px !default;

.arm-dropdown {
  width: max-content;
  user-select: none;
}

.arm-modal.arm-dropdown-content {
  position: fixed;
  top: var(--arm-dropdown-top);
  left: var(--arm-dropdown-left);
  width: var(--arm-dropdown-width);
  min-width: $arm-dropdown-min-width;
  user-select: none;
  z-index: 2;
  padding: 0;

  .arm-auto-resizer {
    width: 100%;

    .arm-auto-resizer-content {
      width: 100%;
    }
  }

  &[data-scrolling='true'] {
    .arm-dropdown-content-inner {
      max-height: min(#{$arm-dropdown-height}, calc(100vh));
    }
  }
}

.arm-dropdown-content-inner {
  overflow: auto;
  padding: $spacing-xsmall;
}

@include screen-phone {
  .arm-dropdown-content {
    left: $spacing-xsmall;
    width: calc(100vw - #{$spacing-xsmall * 2});
  }
}

// dropdownItems.basic.scss

.arm-dropdown-items {
  &:focus {
    border: 0;
    outline: none;
  }
}

.arm-modal.arm-dropdown-items-content {
  padding: 0;

  .arm-dropdown-content-inner {
    padding: $spacing-xxsmall 0;
  }
}

.arm-dropdown-items-content {
  ul {
    padding: 0;
    margin: 0;
  }
}

.arm-dropdown-item {
  @include space-between-children-horizontal($spacing-xsmall);

  cursor: pointer;
  display: flex;
  align-items: center;
}

// errorMessage.basic.scss

.arm-error-message {
  display: flex;
  align-items: center;

  > .arm-icon {
    margin-right: $spacing-xsmall;
  }
}

// expandable.basic.scss

.arm-expandable {
  &[data-direction='vertical'] {
    width: initial;
    &[data-is-open='false'] {
      height: 0;
    }
  }

  &[data-direction='horizontal'] {
    height: initial;
    &[data-is-open='false'] {
      width: 0;
    }
  }
}

// fixedProgressBar.basic.scss

.arm-progress-bar.arm-global-progress-bar {
  position: fixed;
  border-radius: 0;

  .arm-progress-bar-progress,
  &[data-has-label='true'],
  &[data-has-label='true'] .arm-progress-bar-progress {
    border-radius: 0;
  }

  &[data-position='top'] {
    top: 0;
    left: 0;
    width: 100vw;

    &[data-hidden='true'] {
      transform: translateY(-100%);
    }
  }

  &[data-position='bottom'] {
    bottom: 0;
    left: 0;
    width: 100vw;

    &[data-hidden='true'] {
      transform: translateY(100%);
    }
  }

  &[data-position='left'] {
    bottom: 0;
    left: 0;
    height: 100vw;

    &[data-hidden='true'] {
      transform: translateX(-100%);
    }
  }

  &[data-position='right'] {
    bottom: 0;
    right: 0;
    height: 100vw;

    &[data-hidden='true'] {
      transform: translateX(100%);
    }
  }
}

// group.basic.scss

.arm-group-inner {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

// icon.basic.scss

.arm-icon {
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  &::before {
    // icons are rendered in before pseudo element
    @include init-pseudo;
  }
}

// image.basic.scss

.arm-image {
  position: relative;

  .arm-status {
    @include absolute-fill;
    @include flex-centre-content;

    padding: $spacing-small;
    width: 100%;
    height: 100%;
    border: $line-light;
  }

  img {
    width: 100%;
  }
}

.arm-image-inner {
  &[data-loading='true'],
  &[data-error='true'] {
    min-height: $spacing-large;
    min-width: $spacing-large;
  }
}

// input.basic.scss

.arm-input-inner {
  cursor: text;
}

.arm-input-base-input {
  flex-grow: 1;
  appearance: none;
  border: 0;
  outline: none;
  background-color: transparent;
  padding: $spacing-xsmall 0;
  height: $input-height;

  &:focus {
    border: 0;
    outline: none;
  }
}

// inputWrapper.basic.scss

.arm-input-inner {
  @include space-between-children-horizontal($spacing-xsmall);

  width: 100%;
  padding: 0 $spacing-xsmall;
  display: flex;
  align-items: center;
}

.arm-input-wrapper {
  max-width: $input-width;
  width: 100%;

  &[data-disabled='true'] {
    pointer-events: none;
    user-select: none;
  }

  .arm-input-wrapper {
    width: initial;
    flex: 1;

    .arm-input-inner {
      width: 100%;

      input {
        background-color: transparent;
      }
    }
  }
}

.arm-input-wrapper-below,
.arm-input-wrapper-above {
  width: 100%;

  .arm-auto-resizer-content {
    width: 100%;
  }
}

// listBox.basic.scss

.arm-listbox-wrapper {
  width: 100%;
  max-width: $input-width;
}

.arm-input.arm-listbox {
  cursor: pointer;
}

.arm-listbox-inner {
  flex-grow: 1;
  position: relative;
}

.arm-icon.arm-listbox-overlay-icon {
  position: absolute;
  right: $spacing-xsmall;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.6rem;
}

.arm-listbox-content {
  height: $input-height;
  display: flex;
  align-items: center;
  cursor: pointer;

  .placeholder {
    color: $gray-light;
  }

  p {
    font-size: 0.8rem;
  }
}

// listBoxMulti.basic.scss

.arm-listbox-multi-wrapper {
  width: 100%;
  max-width: $input-width;
}

.arm-listbox-multi {
  cursor: pointer;

  .arm-input-inner {
    cursor: pointer;
  }
}

.arm-listbox-multi-inner {
  flex-grow: 1;
  position: relative;
  overflow-x: auto;
}

.arm-listbox-multi-content {
  height: $input-height;
  display: flex;
  align-items: center;
  margin-right: $spacing-large;

  .arm-tag {
    margin-right: $spacing-xsmall;
  }

  .placeholder {
    color: $gray-light;
  }
}

.arm-icon.arm-listbox-multi-overlay-icon {
  font-size: 0.6rem;
}

// modal.basic.scss

.arm-modal {
  background-color: $white;
  user-select: contain;
  padding: $spacing-xsmall;
}

.arm-modal-wrapper {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 4;

  &[data-close-on-background-click='false'] {
    pointer-events: none;

    .arm-modal {
      pointer-events: visible;
    }
  }

  &[data-darken-background='true'] {
    background-color: rgba($black, 0.2);
    cursor: pointer;

    .arm-modal {
      cursor: default;
    }
  }

  &[data-is-closing='true'] {
    opacity: 0;
    pointer-events: none;

    .arm-modal {
      pointer-events: none;
    }
  }
}

// progressBar.basic.scss

$arm-progress-bar-thickness: 0.5rem !default;
$arm-progress-bar-with-label-thickness: 1rem !default;

.arm-progress-bar-progress {
  @include absolute-fill;

  overflow: hidden;

  &::after {
    @include init-pseudo;
    @include fill;

    background-color: var(--arm-progress-bar-color, $brand-primary);
  }
}

.arm-progress-bar {
  background-color: $gray-light;
  position: relative;

  &[data-direction='up'],
  &[data-direction='down'] {
    width: $arm-progress-bar-thickness;
    height: 100%;
  }
  &[data-direction='down'] {
    .arm-progress-bar-progress::after {
      transform: translateY(calc(var(--arm-progress-bar-progress) - 100%));
    }
  }
  &[data-direction='up'] {
    .arm-progress-bar-progress::after {
      transform: translateY(calc(100% - var(--arm-progress-bar-progress)));
    }
  }

  &[data-direction='left'],
  &[data-direction='right'] {
    height: $arm-progress-bar-thickness;
    width: 100%;
  }
  &[data-direction='right'] {
    .arm-progress-bar-progress::after {
      transform: translateX(calc(var(--arm-progress-bar-progress) - 100%));
    }
  }
  &[data-direction='left'] {
    .arm-progress-bar-progress::after {
      transform: translateX(calc(100% - var(--arm-progress-bar-progress)));
    }
  }

  &[data-has-label='true'] {
    &[data-direction='up'],
    &[data-direction='down'] {
      width: $arm-progress-bar-with-label-thickness;
    }

    &[data-direction='left'],
    &[data-direction='right'] {
      height: $arm-progress-bar-with-label-thickness;
    }
  }
}

.arm-progress-bar-label {
  color: $white;

  &[data-variant='centre'] {
    @include absolute-fill;
    @include flex-centre-content;

    text-align: center;
    font-size: min(#{$arm-progress-bar-with-label-thickness * 0.7}, 1rem);
  }

  &[data-variant='centre-progress'] {
    @include flex-centre-content;

    text-align: center;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: var(--arm-progress-bar-progress);
    overflow: hidden;
    font-size: min(#{$arm-progress-bar-with-label-thickness * 0.7}, 1rem);
  }
}

// radioInput.basic.scss

.arm-radio-input-radio {
  @include square(1.4rem);
  @include flex-centre-content;

  position: relative;

  &::after {
    @include init-pseudo;
    @include square(0.9rem);

    pointer-events: none;
    background-color: $brand-primary;
    opacity: 0;
  }

  .arm-icon {
    @include absolute-fill;
    @include flex-centre-content;

    pointer-events: none;
    opacity: 0;

    &.arm-icon.arm-radio-input-unchecked-icon {
      opacity: 1;
    }

    &.arm-icon.arm-radio-input-checked-icon {
      color: $brand-primary;
    }
  }
}

.arm-radio-input {
  label {
    @include space-between-children-horizontal($spacing-xsmall);

    display: flex;
    align-items: center;
    cursor: pointer;
  }

  &[data-has-checked-icon='true'] {
    .arm-radio-input-radio {
      &::after {
        background-color: transparent;
      }
    }
  }

  &[data-checked='true'] {
    .arm-radio-input-radio {
      &::after {
        opacity: 1;
      }
    }
  }
}

.arm-radio-input-radio-input {
  @include absolute-fill;

  appearance: none;
  margin: 0;
  cursor: pointer;

  &:checked ~ .arm-icon.arm-radio-input-checked-icon {
    opacity: 1;
  }

  &:checked ~ .arm-icon.arm-radio-input-unchecked-icon {
    opacity: 0;
  }
}

// rangeInput.basic.scss

$range-input-track-thickness: 6px !default;

.arm-range-input-handle {
  @include circle(0.7rem);

  position: absolute;
  left: var(--arm-range-input-percent);
  transform: translate(-50%, -50%);
  top: 50%;
  pointer-events: none;

  .arm-icon {
    @include absolute-centre-self;
  }
}

.arm-range-input {
  @include space-between-children-horizontal($spacing-xsmall);

  width: $input-width;
  display: flex;
  align-items: center;

  &[data-disabled='true'] {
    opacity: 0.5;
  }
}

.arm-range-input-track {
  position: relative;
  flex-grow: 1;
  height: $input-height;
}

.arm-range-input-input {
  @include absolute-fill;

  opacity: 0;
  background-color: transparent;
  border: 0;
  cursor: pointer;

  @include range-input-thumb {
    opacity: 0;
    background-color: transparent;
    appearance: none;
  }

  @include range-input-track {
    opacity: 0;
    background-color: transparent;
    appearance: none;
  }

  &:active {
    ~ .arm-range-input-handle {
      transform: translate(-50%, -50%) scale(1.1);
    }
  }
}

.arm-range-input-track-inner {
  height: $range-input-track-thickness;
  position: absolute;
  width: 100%;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  background-color: $gray-light;
  overflow: hidden;

  &::after {
    @include init-pseudo;

    position: absolute;
    left: 0;
    top: 0;
    width: var(--arm-range-input-percent);
    height: 100%;
    background-color: $brand-primary;
  }
}

// scrollToEndListener.basic.scss

.arm-scroll-to-end-listener-status {
  @include flex-centre-content;

  width: 100%;
  padding: $spacing-medium;
}

.arm-scroll-to-end-listener-listener {
  width: 100%;
}

// select.basic.scss

.arm-input.arm-select {
  .arm-select-inner {
    flex-grow: 1;
    position: relative;
  }
}

.arm-select-select {
  @include fill;

  height: $input-height;
  cursor: pointer;
  padding: $spacing-xsmall 0;
  appearance: none;
  background-color: transparent;
  resize: none;
  font-family: inherit;
  outline: none;
  border: 0;

  &:focus {
    outline: none;
    border: 0;
  }
}

.arm-icon.arm-select-overlay-icon {
  position: absolute;
  right: $spacing-xsmall;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.6rem;
}

// sideMenu.basic.scss

$arm-side-menu-width: 240px !default;

.arm-side-menu {
  top: 0;
  bottom: 0;
  position: fixed;
  width: 100%;
  max-width: min(#{$arm-side-menu-width}, calc(100vw - #{$spacing-large}));

  &[data-side='left'] {
    left: 0;
  }

  &[data-side='right'] {
    right: 0;
  }
}

// spinner.basic.scss

.arm-spinner {
  @include flex-centre-content;

  flex-direction: column;

  &[data-fill-container='true'] {
    @include fill;

    flex-grow: 1;
    align-self: stretch;
    justify-self: stretch;
  }

  &[data-fill-container='false'] {
    width: max-content;
    height: max-content;
  }
}

.arm-spinner-inner {
  animation: spin-clockwise $transition-slow linear infinite;
  width: max-content;
  height: max-content;
}

.arm-spinner-label {
  margin-top: $spacing-small;
  font-size: 0.7rem;
}

// stepper.basic.scss

$arm-stepper-icon-height: 2.2rem !default;
$arm-stepper-icon-height-small: 1rem !default;

.arm-stepper-step-icon {
  @include flex-centre-content;
  @include circle($arm-stepper-icon-height);

  margin-bottom: $spacing-small;
  border: 2px solid $gray-light;
  font-size: 1.2rem;
  flex-shrink: 0;
}

.arm-stepper-step {
  border: 0;
  appearance: none;
  text-align: center;
  cursor: pointer;
  display: flex;
  align-items: center;
  flex-direction: column;
  padding: 0;
  background-color: inherit;
  color: inherit;

  &[data-current='true'] {
    .arm-stepper-step-icon {
      border-color: $brand-primary;
      color: $brand-primary;
    }
  }

  &[data-previous='true'] {
    .arm-stepper-step-icon {
      border-color: $brand-primary;
      background-color: $brand-primary;
      color: $white;
    }
  }

  &[data-error='true'] {
    .arm-stepper-step-icon {
      border-color: $color-negative;
      background-color: $color-negative;
      color: $white;

      .arm-status {
        .arm-icon {
          color: $white;
        }
      }
    }
  }

  &[data-small='true'] {
    .arm-stepper-step-icon {
      @include square($arm-stepper-icon-height-small);

      margin-top: math.div($arm-stepper-icon-height, 2) - math.div($arm-stepper-icon-height-small, 2);
      font-size: 0.7rem;
    }

    &[data-pending='true'] {
      .arm-stepper-step-icon {
        border: 0;
        background-color: transparent;
        color: $brand-primary;
      }
    }

    &[data-error='true'] {
      .arm-stepper-step-icon {
        border: 0;
        background-color: transparent;

        .arm-status {
          .arm-icon {
            color: $color-negative;
          }
        }
      }
    }
  }

  &[disabled] {
    pointer-events: none;
    color: $gray-light;
  }

  > * {
    margin-right: inherit;
  }
}

.arm-stepper {
  display: flex;

  .arm-stepper-step {
    flex: 1 1 0;
    position: relative;

    &:not(:last-child) {
      .arm-stepper-step-icon {
        &::after {
          @include init-pseudo;

          position: absolute;
          background-color: $gray-light;
        }
      }
    }

    &[data-disabled='true'] {
      .arm-stepper-step-icon {
        color: $gray-light;
      }
    }

    &[data-previous='true'] {
      &:not(:last-child) {
        .arm-stepper-step-icon {
          &::after {
            background-color: $brand-primary;
          }
        }
      }
    }
  }

  &[data-direction='horizontal'] {
    .arm-stepper-step {
      padding: 0 $spacing-xsmall;

      .arm-stepper-step-icon {
        &::after {
          top: calc(#{math.div($arm-stepper-icon-height, 2)} - 1px);
          width: calc(100% - #{$arm-stepper-icon-height});
          height: 2px;
          left: calc(50% + #{math.div($arm-stepper-icon-height, 2)});
        }
      }

      &[data-next-small='true'] {
        .arm-stepper-step-icon {
          &::after {
            width: calc(100% - #{math.div($arm-stepper-icon-height-small, 2) + math.div($arm-stepper-icon-height, 2)});
          }
        }
      }

      &[data-small='true'] {
        .arm-stepper-step-icon {
          &::after {
            left: calc(50% + #{math.div($arm-stepper-icon-height-small, 2)});
            width: calc(100% - #{math.div($arm-stepper-icon-height-small, 2) + math.div($arm-stepper-icon-height, 2)});
          }
        }

        &[data-next-small='true'] {
          .arm-stepper-step-icon {
            &::after {
              width: calc(100% - #{$arm-stepper-icon-height-small});
            }
          }
        }
      }
    }
  }

  &[data-direction='vertical'] {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(var(--arm-stepper-length), 1fr);

    .arm-stepper-step {
      padding: $spacing-xsmall 0;
      flex-direction: row;

      .arm-stepper-step-icon {
        margin: 0;
        margin-right: $spacing-small;

        &::after {
          left: calc(#{math.div($arm-stepper-icon-height, 2)} - 1px);
          height: calc(100% - #{$arm-stepper-icon-height});
          width: 2px;
          top: calc(50% + #{math.div($arm-stepper-icon-height, 2)});
        }
      }

      &[data-next-small='true'] {
        .arm-stepper-step-icon {
          &::after {
            height: calc(100% - #{math.div($arm-stepper-icon-height-small, 2) + math.div($arm-stepper-icon-height, 2)});
          }
        }
      }

      &[data-small='true'] {
        .arm-stepper-step-icon {
          margin-left: math.div($arm-stepper-icon-height, 2) - math.div($arm-stepper-icon-height-small, 2);

          &::after {
            top: calc(50% + #{math.div($arm-stepper-icon-height-small, 2)});
            height: calc(100% - #{math.div($arm-stepper-icon-height-small, 2) + math.div($arm-stepper-icon-height, 2)});
          }
        }

        &[data-next-small='true'] {
          .arm-stepper-step-icon {
            &::after {
              height: calc(100% - #{$arm-stepper-icon-height-small});
            }
          }
        }
      }
    }
  }
}

.arm-stepper-step-icon-index {
  font-size: 1.3rem;
}

// switchInput.basic.scss

$arm-switch-input-width: 50px !default;
$arm-switch-input-height: 30px !default;
$arm-switch-input-handle-padding: math.div($spacing-xxsmall, 2) !default;
$arm-switch-input-handle: calc(#{$arm-switch-input-height} - #{$arm-switch-input-handle-padding * 2});

.arm-switch-input {
  &[data-icon-style='on-handle'] {
    .arm-switch-input-inner {
      .arm-switch-input-checked-icon {
        left: $spacing-xxsmall;
      }
    }
  }

  &[data-checked='true'] {
    .arm-switch-input-inner::after,
    &[data-icon-style='on-handle'] .arm-switch-input-checked-icon,
    &[data-icon-style='on-handle'] .arm-switch-input-unchecked-icon {
      transform: translateX(calc(#{$arm-switch-input-width} - #{$arm-switch-input-handle} - #{$arm-switch-input-handle-padding * 2}));
    }

    .arm-switch-input-checked-icon {
      opacity: 1;
    }

    .arm-switch-input-unchecked-icon {
      opacity: 0;
    }
  }
}

.arm-switch-input-inner {
  position: relative;
  cursor: pointer;
  height: $arm-switch-input-height;
  width: $arm-switch-input-width;
  box-shadow: $shadow-inner-xsmall;

  &::after {
    @include init-pseudo;
    @include square($arm-switch-input-handle);

    top: $arm-switch-input-handle-padding;
    left: $arm-switch-input-handle-padding;
    position: absolute;
    pointer-events: none;
    box-shadow: $shadow-small;
  }
}

.arm-switch-input-checkbox {
  @include fill;

  appearance: none;
  border: 0;
  outline: none;
  background-color: transparent;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

.arm-switch-input-unchecked-icon,
.arm-switch-input-checked-icon {
  @include square($arm-switch-input-handle);
  @include flex-centre-content;

  position: absolute;
  top: $arm-switch-input-handle-padding;
  z-index: 2;
  pointer-events: none;
}

.arm-switch-input-checked-icon {
  right: $arm-switch-input-handle-padding;
  opacity: 0;
}

.arm-switch-input-unchecked-icon {
  left: $arm-switch-input-handle-padding;
}

// tabControl.basic.scss

.arm-tab-control {
  display: flex;
  align-items: center;
}

.arm-button.arm-tab-control-tab {
  color: $black;
  padding: $spacing-xxsmall $spacing-xsmall;

  &[data-is-current='true'] {
    color: $brand-primary;
  }
}

// tabSelect.basic.scss

.arm-tab-select {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-items: center;

  &[data-disabled='true'] {
    opacity: 0.5;
    pointer-events: none;
  }
}

// tag.basic.scss

.arm-tag {
  @include space-between-children-horizontal($spacing-xsmall);

  display: flex;
  align-items: center;
  white-space: nowrap;
}

// tagInput.basic.scss

.arm-tag-input-input {
  flex-grow: 1;
  appearance: none;
  border: 0;
  outline: none;
  background-color: transparent;
  padding: $spacing-xsmall 0;
  height: $input-height;
}

.arm-input-inner {
  cursor: text;
}

.arm-tag-input-inner {
  @include flex-centre-content;
  @include space-between-children-horizontal($spacing-xxsmall);

  overflow-x: auto;
  flex-grow: 1;
}

.arm-input-wrapper-above .arm-auto-resizer-content,
.arm-input-wrapper-below .arm-auto-resizer-content {
  @include space-between-children-horizontal($spacing-xxsmall);

  overflow-y: auto;
  display: flex;
  align-items: center;
  flex-wrap: wrap;

  .arm-tag {
    margin-top: $spacing-xxsmall * 0.5;
    margin-bottom: $spacing-xxsmall * 0.5;
  }
}

// textAreaInput.basic.scss

.arm-text-area-input {
  max-width: $input-width-large;

  .arm-input-inner {
    cursor: text;
  }
}

.arm-text-area-input-textarea {
  min-height: $input-height-large;
  width: 100%;
  appearance: none;
  background-color: transparent;
  resize: none;
  font-family: inherit;
  outline: none;
  border: 0;

  &:focus {
    outline: none;
    border: 0;
  }
}

// timeInput.basic.scss

$arm-time-input-width: 47px !default;

.arm-time-input {
  max-width: max-content;

  .arm-input {
    margin-right: 0;

    .arm-input-base-input {
      width: $arm-time-input-width;
    }
  }

  .arm-time-input-between-inputs {
    color: $gray-light;
    margin-right: 0;
  }
}

// toast.basic.scss

$toast-notification-width: 200px !default;

.arm-toast-notification-container {
  @include fixed-fill;

  display: flex;
  justify-content: space-between;
  pointer-events: none;
}

.arm-toast-notification-container-left,
.arm-toast-notification-container-right {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  flex-grow: 1;
  height: 100%;
  max-width: $toast-notification-width;
}

.arm-toast-notification-toasts {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.arm-toast-notification-toasts-top {
  flex-direction: column-reverse;
}

.arm-toast-notification {
  pointer-events: all;
}

.arm-toast-notification-inner {
  width: 100%;
  background-color: $white;
}

.arm-toast-notification-top {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.arm-toast-notification-close-button {
  margin-left: $spacing-xsmall;
}

// tooltip.basic.scss

$arm-tooltip-max-width: 250px !default;

.arm-tooltip-wrapper {
  cursor: default;
}

.arm-tooltip {
  left: var(--arm-tooltip-left);
  top: var(--arm-tooltip-top);
  max-width: $arm-tooltip-max-width;
  position: fixed;
}

// basic.scss

p {
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-end: 0;
}

* {
  box-sizing: border-box;
}

