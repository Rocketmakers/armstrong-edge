{"version":3,"file":"statusWrapper.component-9facb966.js","sources":["../../src/components/status/status.component.tsx","../../src/components/statusWrapper/statusWrapper.component.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { concat } from '../../utils/classNames';\nimport { useArmstrongConfig } from '../config';\nimport { Spinner } from '../spinner';\n\nimport './status.theme.css';\n\nexport interface IStatusProps {\n  /** show a spinner */\n  pending?: boolean;\n\n  /** show an error state  */\n  error?: boolean;\n\n  /** the icon to use for the error */\n  errorIcon?: JSX.Element;\n\n  /** the icon to use for the spinner */\n  spinnerIcon?: JSX.Element;\n\n  /** an optional CSS className for the rendered status */\n  className?: string;\n}\n\n/** Render a status icon which can either be pending or errored */\nexport const Status = React.forwardRef<HTMLDivElement, IStatusProps>(\n  ({ pending, error, errorIcon, spinnerIcon, className, ...rest }, ref) => {\n    const globals = useArmstrongConfig({\n      validationErrorIcon: errorIcon,\n      spinnerIcon,\n    });\n\n    if (!error && !pending) {\n      return null;\n    }\n    return (\n      <div\n        ref={ref}\n        className={concat('arm-status', className)}\n        data-active={!!pending || !!error ? true : undefined}\n        data-error={!!error && !pending ? true : undefined}\n        data-pending={pending ? true : undefined}\n        role=\"status\"\n        {...rest}\n      >\n        {error && !pending && globals.validationErrorIcon}\n        {pending && <Spinner className=\"arm-status-spinner\" fillContainer={false} icon={globals.spinnerIcon} />}\n      </div>\n    );\n  }\n);\n\nStatus.displayName = 'Status';\n","import * as React from 'react';\n\nimport { FormValidationMode } from '../../form';\nimport { useArmstrongConfig } from '../config';\nimport { Status } from '../status/status.component';\n\nexport interface IStatusWrapperProps {\n  /** which side of the button to show the spinner on - defaults to 'right' */\n  statusPosition?: 'left' | 'right';\n\n  /** show an error state icon on the component (will be true automatically if validationErrorMessages are passed in or errors are in the binder) */\n  error?: boolean;\n\n  /** show a spinner and disable */\n  pending?: boolean;\n\n  /** how to render the validation errors */\n  validationMode?: FormValidationMode;\n\n  /** the icon to use for validation errors */\n  errorIcon?: JSX.Element;\n\n  /** an optional CSS className for the rendered status */\n  className?: string;\n}\n\nexport const StatusWrapper: React.FC<React.PropsWithChildren<IStatusWrapperProps>> = ({\n  statusPosition,\n  error,\n  pending,\n  errorIcon,\n  validationMode,\n  children,\n  className,\n}) => {\n  const globals = useArmstrongConfig({\n    validationErrorIcon: errorIcon,\n    validationMode,\n    inputStatusPosition: statusPosition,\n  });\n\n  const shouldShowErrorIcon = (globals.validationMode === 'both' || globals.validationMode === 'icon') && !!error;\n\n  return (\n    <>\n      {globals.inputStatusPosition === 'left' && (\n        <Status\n          className={className}\n          error={shouldShowErrorIcon}\n          pending={pending}\n          errorIcon={globals.validationErrorIcon}\n          data-position=\"left\"\n        />\n      )}\n      {children}\n      {globals.inputStatusPosition === 'right' && (\n        <Status\n          className={className}\n          error={shouldShowErrorIcon}\n          pending={pending}\n          errorIcon={globals.validationErrorIcon}\n          data-position=\"right\"\n        />\n      )}\n    </>\n  );\n};\n"],"names":["Status","React.forwardRef","pending","error","errorIcon","spinnerIcon","className","rest","ref","globals","useArmstrongConfig","jsxs","concat","jsx","Spinner","StatusWrapper","statusPosition","validationMode","children","shouldShowErrorIcon","Fragment"],"mappings":"sPA0BO,MAAAA,EAAAC,EAAA,WAAqB,CAAA,CAAA,QAAAC,EAAA,MAAAC,EAAA,UAAAC,EAAA,YAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAExB,MAAAC,EAAAC,EAAA,CAAmC,oBAAAN,EACZ,YAAAC,CACrB,CAAA,EAGF,MAAA,CAAAF,GAAA,CAAAD,EACE,KAEFS,EACE,MAAC,CAAA,IAAAH,EACC,UAAAI,EAAA,aAAAN,CAAA,EACyC,cAAAJ,GAAAC,EAAA,GAAA,OACE,aAAAA,GAAA,CAAAD,EAAA,GAAA,OACF,eAAAA,EAAA,GAAA,OACV,KAAA,SAC1B,GAAAK,EACD,SAAA,CAEHJ,GAAA,CAAAD,GAAAO,EAAA,oBAA6BP,GAAAW,EAAAC,EAAA,CAAA,UAAA,qBAAA,cAAA,GAAA,KAAAL,EAAA,WAAA,CAAA,CACuE,CAAA,CAAA,CACvG,CAGN,EAEAT,EAAA,YAAA,wwBC3BO,MAAAe,EAAA,CAAA,CAA+E,eAAAC,EACpF,MAAAb,EACA,QAAAD,EACA,UAAAE,EACA,eAAAa,EACA,SAAAC,EACA,UAAAZ,CAEF,IAAA,CACE,MAAAG,EAAAC,EAAA,CAAmC,oBAAAN,EACZ,eAAAa,EACrB,oBAAAD,CACqB,CAAA,EAGvBG,GAAAV,EAAA,iBAAA,QAAAA,EAAA,iBAAA,SAAA,CAAA,CAAAN,EAEA,OAAAQ,EAAAS,EAAA,CAAA,SAAA,CAEKX,EAAA,sBAAA,QAAAI,EACCb,EAAC,CAAA,UAAAM,EACC,MAAAa,EACO,QAAAjB,EACP,UAAAO,EAAA,oBACmB,gBAAA,MACL,CAAA,EAChBS,EAEDT,EAAA,sBAAA,SAAAI,EAECb,EAAC,CAAA,UAAAM,EACC,MAAAa,EACO,QAAAjB,EACP,UAAAO,EAAA,oBACmB,gBAAA,OACL,CAAA,CAChB,CAAA,CAAA,CAIR"}