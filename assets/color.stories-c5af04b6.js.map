{"version":3,"file":"color.stories-c5af04b6.js","sources":["../../src/utils/color.stories.mdx"],"sourcesContent":["import { Meta, Canvas, ArgsTable } from '@storybook/addon-docs';\n\n<Meta title=\"Utilities/Color\" />\n\n## Color\n\nUtilities for working with colors.\n\nI was forced to spell it using American English... I'm not happy about it either.\n\n### hexToRGB\n\nConvert a hex string to an RGB object\n\n```ts\nfunction hexToRGB(hex: string): IRGBColor;\n```\n\n```ts\nimport { hexToRGB } from '@rocketmakers/armstrong';\n\nconst result = hexToRGB(\"#FFFFFF\");\n\n// result\n{\n    red: 255,\n    blue: 255,\n    green: 255\n}\n\nconst result = hexToRGB(\"#FFFFFF00\");\n\n// result\n{\n    red: 255,\n    blue: 255,\n    green: 255,\n    alpha: 0\n}\n```\n\n### colorToRGB\n\nEnsure that a Color (a hex string or an RGB object) is an RGB object, converting it if not\n\nThis is useful for components which will expect either, but you only want to work with RGB\n\n```ts\nfunction colorToRGB(color: Color): IRGBColor;\n```\n\n```ts\nimport { colorToRGB } from '@rocketmakers/armstrong';\n\nconst result = colorToRGB(\"#FFFFFF\");\n\n// result\n{\n    red: 255,\n    blue: 255,\n    green: 255\n}\n\nconst result = colorToRGB({ red: 0, green: 0, blue: 0 });\n\n// result\n{\n    red: 0,\n    blue: 0,\n    green: 0\n}\n```\n\n### RGBToHex\n\nConvert an RGB string to a hex colour\n\n```ts\nfunction RGBToHex({ red, green, blue, alpha }: IRGBColor): string;\n```\n\n```ts\nimport { RGBToHex } from '@rocketmakers/armstrong';\n\nconst result = RGBToHex({ red: 255, green: 255, blue: 255 });\n\n// result\n('#FFFFFF');\n\nconst result = RGBToHex({ red: 255, green: 255, blue: 255, alpha: 0.01 });\n\n// result\n('#FFFFFF03');\n```\n\n### lerpRGB\n\nGet a colour lerped using a progress between a start and end colour\n\n```ts\nfunction lerpRGB(startColor: IRGBColor, endColor: IRGBColor, /** out of 100 */ progress: number): IRGBColor;\n```\n\n```ts\nimport { lerpRGB } from '@rocketmakers/armstrong';\n\nconst startColor = { red: 0, green: 255, blue: 0 };\nconst endColor = { red: 255, green: 0, blue: 0 };\n\nconst result = lerpRGB(startColor, endColor, 50)\n\n// result\n{\n    red: 127,\n    green: 128,\n    blue: 0\n}\n```\n\n### multiLerpRGB\n\nGet a colour lerped between multiple breakpoints\n\n```ts\nfunction multiLerpRGB(colors: IRGBColor[], /** out of 100 */ progress: number): IRGBColor;\n```\n\n```ts\nimport { multiLerpRGB } from '@rocketmakers/armstrong';\n\nconst startColor = { red: 0, green: 255, blue: 0 };\nconst midColor = { red: 255, green: 0, blue: 0 };\nconst endColor = { red: 0, green: 0, blue: 255 };\n\nconst result = multiLerpRGB([startColor, midColor, endColor], 25)\n\n// result\n{\n    red: 127,\n    green: 127,\n    blue: 0\n}\n\nconst result = multiLerpRGB([startColor, midColor, endColor], 50)\n\n// result\n{\n    red: 255,\n    green: 0,\n    blue: 0\n}\n```\n\n### lerpHex\n\nGet a colour lerped between a start and end colour as a hex\n\n```ts\nfunction lerpHex(startColor: string, endColor: string, /** out of 100 */ progress: number): string;\n```\n\n```ts\nimport { lerpHex } from '@rocketmakers/armstrong';\n\nconst startColor = '#00FF00';\nconst endColor = '#FF0000';\n\nconst result = lerpHex(startColor, endColor, 50);\n\n// result\n('#7F7F00');\n```\n\n### multiLerpHex\n\nGet a colour lerped between multiple breakpoints as a hex\n\n```ts\nfunction multiLerpHex(colors: string[], /** out of 100 */ progress: number): string;\n```\n\n```ts\nimport { multiLerpHex } from '@rocketmakers/armstrong';\n\nconst startColor = '#00FF00';\nconst midColor = '#FF0000';\nconst endColor = '#0000FF';\n\nconst result = multiLerpHex([startColor, midColor, endColor], 50);\n\n// result\n('#FF0000');\n```\n\n### colorToRGBCSString\n\nTurn an rgb object into a css string, i.e. rgb(100, 100, 90)\n\n```ts\nfunction colorToRGBCSString(color: IRGBColor);\n```\n\n```ts\nimport { colorToRGBCSString } from '@rocketmakers/armstrong';\n\nconst result = colorToRGBCSString({ red: 0, green: 100, blue: 200 });\n\n// result\n('rgb(0, 100, 200)');\n\nconst result = colorToRGBCSString({ red: 0, green: 100, blue: 200, alpha: 1 });\n\n// result\n('rgba(0, 100, 200, 1)');\n```\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"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"}