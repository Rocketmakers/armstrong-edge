import{j as E,a as ae}from"./jsx-runtime-eae7a151.js";import{r as l}from"./index-c4905b50.js";import{u as te,I as ne}from"./inputWrapper.component-231b3b00.js";import{u as le,a as ie}from"./useDidUpdateEffect-3fc0eff1.js";import{c as p}from"./classNames-9011e307.js";import{o as re}from"./radixDialog-4a243565.js";import{a as oe}from"./label.component-efbca678.js";import{u as se}from"./config.context-108849f1.js";const z=l.forwardRef(({milliseconds:o,value:s,onValueChange:c,onChange:u,...b},g)=>{const[I,m]=te(o,s,c),V=l.useCallback(f=>{m(f.currentTarget.value),u==null||u(f)},[m,u]);return E("input",{ref:g,value:I,onChange:V,...b})});z.displayName="DebounceInput";const ue=l.forwardRef(({bind:o,onChange:s,value:c,className:u,leftOverlay:b,rightOverlay:g,validationErrorMessages:I,validationMode:m,errorIcon:V,pending:f,disabled:S,disableOnPending:R,statusPosition:x,hideIconOnStatus:A,onValueChange:h,scrollValidationErrorsIntoView:j,delay:q,validationErrorsClassName:F,statusClassName:P,inputClassName:W,label:L,required:U,requiredIndicator:G,displaySize:w,labelClassName:H,labelId:J,wrapperTestId:K,error:Q,autoValidate:X,...i},C)=>{const Y=l.useId(),D=i.id??Y,[t,O,a]=oe(o,{value:c==null?void 0:c.toString(),validationErrorMessages:I,validationMode:m,validationErrorIcon:V,autoValidate:X}),[d,N]=l.useState(t==null?void 0:t.toString());le(()=>{(t==null?void 0:t.toString())!==(d==null?void 0:d.toString())&&N(t==null?void 0:t.toString())},[t]);const r=se({validationMode:a.validationMode,disableControlOnPending:R,hideInputErrorIconOnStatus:A,inputDisplaySize:w,inputStatusPosition:x,requiredIndicator:G,validationErrorIcon:a.validationErrorIcon,scrollValidationErrorsIntoView:j,autoValidate:a.autoValidate}),T=l.useCallback(e=>{if(i.type!=="number")return e;if(e)return Number.isNaN(parseFloat(e))?null:parseFloat(e)},[i.type]),M=l.useCallback(e=>{var B,y,_;const n=((_=(y=(B=o==null?void 0:o.bindConfig)==null?void 0:B.format)==null?void 0:y.toData)==null?void 0:_.call(y,e))||e;O(n)},[O,o]),v=l.useCallback(e=>{const n=T(e);n!==null&&(M(n),h==null||h(n))},[T,M,h]),Z=l.useCallback(e=>{N(e),v(e)},[v]),$=l.useCallback(e=>{s==null||s(e);const n=e.currentTarget.value;N(n),v(n)},[s,v]);ie(()=>{r.autoValidate&&a.isTouched&&a.validate()},[t]);const ee=l.useCallback(e=>{var n;return r.autoValidate&&!a.isTouched&&a.validate(),a.setTouched(!0),re(e),(n=i.onBlur)==null?void 0:n.call(i,e)},[a,r.autoValidate,i]),k={id:D,className:p("arm-input-base-input",W),value:(d==null?void 0:d.toString())??(o&&""),disabled:S,...i,onBlur:ee};return ae(ne,{"data-size":r.inputDisplaySize,className:p(u,"arm-input-base"),statusClassName:p(P,"arm-input-base-status"),validationErrorsClassName:p(F,"arm-input-base-validation"),leftOverlay:b,rightOverlay:g,validationErrorMessages:a.validationErrorMessages,errorIcon:a.validationErrorIcon,validationMode:a.validationMode,pending:f,disabled:S,statusPosition:r.inputStatusPosition,scrollValidationErrorsIntoView:r.scrollValidationErrorsIntoView,disableOnPending:r.disableControlOnPending,hideIconOnStatus:r.hideInputErrorIconOnStatus,label:L,labelId:J??D,labelClassName:p(H,"arm-input-base-label"),required:U,error:Q,requiredIndicator:r.requiredIndicator,"data-testid":K,displaySize:r.inputDisplaySize,children:[!!q&&E(z,{...i,...k,milliseconds:q,onChange:s,onValueChange:Z,ref:C,"data-size":w}),!q&&E("input",{...i,...k,onChange:$,ref:C,"data-size":w})]})});ue.displayName="Input";try{DebounceInput.displayName="DebounceInput",DebounceInput.__docgenInfo={description:"A component which wraps up a native input element with some binding logic and some repeated elements (icons and stuff) for components which only contain a single input element.",displayName:"DebounceInput",props:{type:{defaultValue:null,description:"The type of input, used to discriminate the bind/value type",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"search"'},{value:'"time"'},{value:'"text"'},{value:'"hidden"'},{value:'"color"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"date"'},{value:'"datetime-local"'},{value:'"month"'},{value:'"password"'},{value:'"week"'}]}},inputClassName:{defaultValue:null,description:"A class name to apply to the input element",name:"inputClassName",required:!1,type:{name:"string"}},bind:{defaultValue:null,description:"prop for binding to an Armstrong form binder (see forms documentation)",name:"bind",required:!1,type:{name:"IBindingProps<TStringValue> | IBindingProps<TNumberValue>"}},onValueChange:{defaultValue:null,description:"Called when the value changes, takes into account any delay values and other effects.",name:"onValueChange",required:!1,type:{name:"((value?: TStringValue) => void) | ((value?: TNumberValue) => void) | undefined"}},delay:{defaultValue:null,description:"The delay config, used to set throttle and debounce values.",name:"delay",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"The current value of the input",name:"value",required:!1,type:{name:"string | number | null"}},displaySize:{defaultValue:null,description:"which size variant to use",name:"displaySize",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},wrapperTestId:{defaultValue:null,description:"optional test ID to use for the input wrapper",name:"wrapperTestId",required:!1,type:{name:"string"}},autoValidate:{defaultValue:null,description:"should the input validate automatically against the provided schema? Default: `true`",name:"autoValidate",required:!1,type:{name:"boolean"}},validationErrorMessages:{defaultValue:null,description:"array of validation errors to render",name:"validationErrorMessages",required:!1,type:{name:"ValidationMessage[]"}},hideIconOnStatus:{defaultValue:null,description:"hide the icon on the given side if there is an active status - defaults to true",name:"hideIconOnStatus",required:!1,type:{name:"boolean"}},disableOnPending:{defaultValue:null,description:"when pending is true should also disable the input",name:"disableOnPending",required:!1,type:{name:"boolean"}},scrollValidationErrorsIntoView:{defaultValue:null,description:"will scroll the validation errors into view when the length of validationErrors changes",name:"scrollValidationErrorsIntoView",required:!1,type:{name:"boolean"}},leftOverlay:{defaultValue:null,description:"Content to show on the left of the input",name:"leftOverlay",required:!1,type:{name:"ReactNode"}},rightOverlay:{defaultValue:null,description:"Content to show on the right of the input",name:"rightOverlay",required:!1,type:{name:"ReactNode"}},statusClassName:{defaultValue:null,description:"Class name for the status component",name:"statusClassName",required:!1,type:{name:"string"}},validationErrorsClassName:{defaultValue:null,description:"Class name for the validation errors component",name:"validationErrorsClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Class name for the label component",name:"labelClassName",required:!1,type:{name:"string"}},labelId:{defaultValue:null,description:"Optional ID for the label element",name:"labelId",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Some optional label content",name:"label",required:!1,type:{name:"ReactNode"}},requiredIndicator:{defaultValue:null,description:'Symbol to use as the required indicator on the label, defaults to "*"',name:"requiredIndicator",required:!1,type:{name:"ReactNode"}},statusPosition:{defaultValue:null,description:"which side of the button to show the spinner on - defaults to 'right'",name:"statusPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},error:{defaultValue:null,description:"show an error state icon on the component (will be true automatically if validationErrorMessages are passed in or errors are in the binder)",name:"error",required:!1,type:{name:"boolean"}},pending:{defaultValue:null,description:"show a spinner and disable",name:"pending",required:!1,type:{name:"boolean"}},validationMode:{defaultValue:null,description:"how to render the validation errors",name:"validationMode",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"message"'},{value:'"both"'}]}},errorIcon:{defaultValue:null,description:"the icon to use for validation errors",name:"errorIcon",required:!1,type:{name:"Element"}}}}}catch{}export{ue as I};
