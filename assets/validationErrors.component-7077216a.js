import{a as n}from"./jsx-runtime-63e4a166.js";import{r as a}from"./index-c4905b50.js";import{c as g}from"./classNames-9011e307.js";import{u as h}from"./config.context-240cf8e4.js";const t=a.forwardRef(({validationErrors:r,className:l,scrollIntoView:d,validationMode:c,...m},u)=>{const o=h({validationMode:c,scrollValidationErrorsIntoView:d}),s=a.useRef(null);a.useImperativeHandle(u,()=>s.current,[s]),a.useEffect(()=>{var e;r.length>0&&o.scrollValidationErrorsIntoView&&((e=s.current)==null||e.scrollIntoView({block:"center",behavior:"smooth"}))},[r.length,o.scrollValidationErrorsIntoView]);const p=a.useCallback((e,i)=>typeof e=="string"?e+i:(e==null?void 0:e.key)??i,[]),f=o.validationMode==="both"||o.validationMode==="message";return n("div",{ref:s,className:g("arm-validation-errors",l),...m,children:r.map((e,i)=>n("div",{className:"arm-validation-error-message","aria-errormessage":typeof e=="string"?e:"",children:f&&n("span",{children:e})},p(e,i)))})});t.displayName="ValidationErrors";try{t.displayName="ValidationErrors",t.__docgenInfo={description:"Render an array of validation errors as error messages",displayName:"ValidationErrors",props:{validationErrors:{defaultValue:null,description:`The errors to render
Can be a string or {key, element} key is necessary for animating in new messages`,name:"validationErrors",required:!0,type:{name:"ValidationMessage[]"}},className:{defaultValue:null,description:"CSS className property",name:"className",required:!1,type:{name:"string"}},scrollIntoView:{defaultValue:null,description:"will scroll the validation errors into view when the length of validationErrors changes",name:"scrollIntoView",required:!1,type:{name:"boolean"}},validationMode:{defaultValue:null,description:"overrides the error messaging and icon display used in the error validation display",name:"validationMode",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"message"'},{value:'"both"'}]}}}}}catch{}export{t as V};
//# sourceMappingURL=validationErrors.component-7077216a.js.map
