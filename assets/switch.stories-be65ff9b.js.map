{"version":3,"file":"switch.stories-be65ff9b.js","sources":["../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/switch/switch.component.tsx"],"sourcesContent":["import $irPIl$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $irPIl$forwardRef, useState as $irPIl$useState, useRef as $irPIl$useRef, createElement as $irPIl$createElement, useEffect as $irPIl$useEffect} from \"react\";\nimport {composeEventHandlers as $irPIl$composeEventHandlers} from \"@radix-ui/primitive\";\nimport {useComposedRefs as $irPIl$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {createContextScope as $irPIl$createContextScope} from \"@radix-ui/react-context\";\nimport {useControllableState as $irPIl$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {usePrevious as $irPIl$usePrevious} from \"@radix-ui/react-use-previous\";\nimport {useSize as $irPIl$useSize} from \"@radix-ui/react-use-size\";\nimport {Primitive as $irPIl$Primitive} from \"@radix-ui/react-primitive\";\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/ const $6be4966fd9bbc698$var$SWITCH_NAME = 'Switch';\nconst [$6be4966fd9bbc698$var$createSwitchContext, $6be4966fd9bbc698$export$cf7f5f17f69cbd43] = $irPIl$createContextScope($6be4966fd9bbc698$var$SWITCH_NAME);\nconst [$6be4966fd9bbc698$var$SwitchProvider, $6be4966fd9bbc698$var$useSwitchContext] = $6be4966fd9bbc698$var$createSwitchContext($6be4966fd9bbc698$var$SWITCH_NAME);\nconst $6be4966fd9bbc698$export$b5d5cf8927ab7262 = /*#__PURE__*/ $irPIl$forwardRef((props, forwardedRef)=>{\n    const { __scopeSwitch: __scopeSwitch , name: name , checked: checkedProp , defaultChecked: defaultChecked , required: required , disabled: disabled , value: value = 'on' , onCheckedChange: onCheckedChange , ...switchProps } = props;\n    const [button, setButton] = $irPIl$useState(null);\n    const composedRefs = $irPIl$useComposedRefs(forwardedRef, (node)=>setButton(node)\n    );\n    const hasConsumerStoppedPropagationRef = $irPIl$useRef(false); // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = $irPIl$useControllableState({\n        prop: checkedProp,\n        defaultProp: defaultChecked,\n        onChange: onCheckedChange\n    });\n    return /*#__PURE__*/ $irPIl$createElement($6be4966fd9bbc698$var$SwitchProvider, {\n        scope: __scopeSwitch,\n        checked: checked,\n        disabled: disabled\n    }, /*#__PURE__*/ $irPIl$createElement($irPIl$Primitive.button, $irPIl$babelruntimehelpersesmextends({\n        type: \"button\",\n        role: \"switch\",\n        \"aria-checked\": checked,\n        \"aria-required\": required,\n        \"data-state\": $6be4966fd9bbc698$var$getState(checked),\n        \"data-disabled\": disabled ? '' : undefined,\n        disabled: disabled,\n        value: value\n    }, switchProps, {\n        ref: composedRefs,\n        onClick: $irPIl$composeEventHandlers(props.onClick, (event)=>{\n            setChecked((prevChecked)=>!prevChecked\n            );\n            if (isFormControl) {\n                hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(); // if switch is in a form, stop propagation from the button so that we only propagate\n                // one click event (from the input). We propagate changes from an input so that native\n                // form validation works and form events reflect switch updates.\n                if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n        })\n    })), isFormControl && /*#__PURE__*/ $irPIl$createElement($6be4966fd9bbc698$var$BubbleInput, {\n        control: button,\n        bubbles: !hasConsumerStoppedPropagationRef.current,\n        name: name,\n        value: value,\n        checked: checked,\n        required: required,\n        disabled: disabled // We transform because the input is absolutely positioned but we have\n        ,\n        style: {\n            transform: 'translateX(-100%)'\n        }\n    }));\n});\n/*#__PURE__*/ Object.assign($6be4966fd9bbc698$export$b5d5cf8927ab7262, {\n    displayName: $6be4966fd9bbc698$var$SWITCH_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/ const $6be4966fd9bbc698$var$THUMB_NAME = 'SwitchThumb';\nconst $6be4966fd9bbc698$export$4d07bf653ea69106 = /*#__PURE__*/ $irPIl$forwardRef((props, forwardedRef)=>{\n    const { __scopeSwitch: __scopeSwitch , ...thumbProps } = props;\n    const context = $6be4966fd9bbc698$var$useSwitchContext($6be4966fd9bbc698$var$THUMB_NAME, __scopeSwitch);\n    return /*#__PURE__*/ $irPIl$createElement($irPIl$Primitive.span, $irPIl$babelruntimehelpersesmextends({\n        \"data-state\": $6be4966fd9bbc698$var$getState(context.checked),\n        \"data-disabled\": context.disabled ? '' : undefined\n    }, thumbProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($6be4966fd9bbc698$export$4d07bf653ea69106, {\n    displayName: $6be4966fd9bbc698$var$THUMB_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */ const $6be4966fd9bbc698$var$BubbleInput = (props)=>{\n    const { control: control , checked: checked , bubbles: bubbles = true , ...inputProps } = props;\n    const ref = $irPIl$useRef(null);\n    const prevChecked = $irPIl$usePrevious(checked);\n    const controlSize = $irPIl$useSize(control); // Bubble checked change to parents (e.g form change event)\n    $irPIl$useEffect(()=>{\n        const input = ref.current;\n        const inputProto = window.HTMLInputElement.prototype;\n        const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked');\n        const setChecked = descriptor.set;\n        if (prevChecked !== checked && setChecked) {\n            const event = new Event('click', {\n                bubbles: bubbles\n            });\n            setChecked.call(input, checked);\n            input.dispatchEvent(event);\n        }\n    }, [\n        prevChecked,\n        checked,\n        bubbles\n    ]);\n    return /*#__PURE__*/ $irPIl$createElement(\"input\", $irPIl$babelruntimehelpersesmextends({\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked\n    }, inputProps, {\n        tabIndex: -1,\n        ref: ref,\n        style: {\n            ...props.style,\n            ...controlSize,\n            position: 'absolute',\n            pointerEvents: 'none',\n            opacity: 0,\n            margin: 0\n        }\n    }));\n};\nfunction $6be4966fd9bbc698$var$getState(checked) {\n    return checked ? 'checked' : 'unchecked';\n}\nconst $6be4966fd9bbc698$export$be92b6f5f03c0fe9 = $6be4966fd9bbc698$export$b5d5cf8927ab7262;\nconst $6be4966fd9bbc698$export$6521433ed15a34db = $6be4966fd9bbc698$export$4d07bf653ea69106;\n\n\n\n\nexport {$6be4966fd9bbc698$export$cf7f5f17f69cbd43 as createSwitchScope, $6be4966fd9bbc698$export$b5d5cf8927ab7262 as Switch, $6be4966fd9bbc698$export$4d07bf653ea69106 as SwitchThumb, $6be4966fd9bbc698$export$be92b6f5f03c0fe9 as Root, $6be4966fd9bbc698$export$6521433ed15a34db as Thumb};\n//# sourceMappingURL=index.mjs.map\n","import { Root, SwitchProps, Thumb } from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { IBindingProps, useBindingState } from '../../form';\nimport { ArmstrongFCExtensions, ArmstrongFCProps, ArmstrongFCReturn, NullOrUndefined } from '../../types';\nimport { concat } from '../../utils/classNames';\nimport { useArmstrongConfig } from '../config/config.context';\nimport { IInputWrapperProps } from '../inputWrapper/inputWrapper.component';\nimport { Label } from '../label/label.component';\nimport { ValidationErrors } from '../validationErrors/validationErrors.component';\n\nimport './switch.theme.css';\n\nexport interface ISwitchProps<TBind extends NullOrUndefined<boolean>>\n  extends Omit<\n      React.DetailedHTMLProps<React.HTMLAttributes<HTMLButtonElement>, HTMLButtonElement>,\n      'onChange' | 'checked'\n    >,\n    Pick<\n      IInputWrapperProps,\n      | 'scrollValidationErrorsIntoView'\n      | 'validationMode'\n      | 'validationErrorMessages'\n      | 'disabled'\n      | 'className'\n      | 'displaySize'\n      | 'labelId'\n      | 'required'\n      | 'requiredIndicator'\n    > {\n  /**  prop for binding to an Armstrong form binder (see forms documentation) */\n  bind?: IBindingProps<TBind>;\n\n  /** (Optional) Whether the switch is checked or not */\n  checked?: TBind;\n\n  /** (Optional) A callback function (newValue: TData) => void to handle state when 'checked' is changed. */\n  onCheckedChange?: (newValue: TBind) => void;\n\n  /** (Optional) The state of the switch when it is initially rendered. Use when you do not need to control its state. */\n  defaultChecked?: boolean;\n\n  /** (Optional) A boolean flag to disable the checkbox input. */\n  disabled?: boolean;\n\n  /** (Optional) A React.ReactNode to display a label for the switch input. */\n  label?: React.ReactNode;\n\n  /** (Optional) Class name for the switch label. */\n  labelClassName?: string;\n\n  /** (Optional) A boolean flag to automatically scroll validation error messages into view. */\n  scrollValidationErrorsIntoView?: boolean;\n\n  /** (Optional) Class name for the validation errors */\n  validationErrorsClassName?: string;\n}\n\nexport const Switch = React.forwardRef<HTMLButtonElement, ISwitchProps<NullOrUndefined<boolean>>>(\n  (\n    {\n      bind,\n      checked,\n      onCheckedChange,\n      defaultChecked,\n      disabled,\n      className,\n      labelClassName,\n      label,\n      validationErrorMessages,\n      validationErrorsClassName,\n      scrollValidationErrorsIntoView,\n      validationMode,\n      displaySize,\n      labelId,\n      required,\n      requiredIndicator,\n      ...nativeProps\n    },\n    ref\n  ) => {\n    const generatedId = React.useId();\n    const id = nativeProps.id ?? generatedId;\n\n    const globals = useArmstrongConfig({\n      validationMode,\n      scrollValidationErrorsIntoView,\n      inputDisplaySize: displaySize,\n      requiredIndicator,\n    });\n\n    const [boundValue, setBoundValue, bindConfig] = useBindingState(bind, {\n      value: checked,\n      onChange: onCheckedChange,\n      validationErrorMessages,\n      validationMode: globals.validationMode,\n    });\n\n    const onCheckedChangeInternal = React.useCallback<Required<SwitchProps>['onCheckedChange']>(\n      newValue => {\n        setBoundValue?.(newValue);\n      },\n      [setBoundValue]\n    );\n\n    return (\n      <>\n        <div className={concat('arm-switch-container', className)} data-disabled={disabled}>\n          <Root\n            {...nativeProps}\n            className=\"arm-switch\"\n            id={id}\n            ref={ref}\n            disabled={disabled}\n            defaultChecked={defaultChecked}\n            onCheckedChange={onCheckedChangeInternal}\n            checked={boundValue ?? undefined}\n            data-size={globals.inputDisplaySize}\n          >\n            <Thumb className=\"arm-switch-nub\" />\n          </Root>\n\n          <Label\n            id={labelId}\n            required={required}\n            requiredIndicator={globals.requiredIndicator}\n            className={concat(labelClassName, 'arm-switch-label')}\n            data-disabled={disabled}\n            htmlFor={id}\n            displaySize={globals.inputDisplaySize}\n          >\n            {label}\n          </Label>\n        </div>\n\n        {bindConfig.validationErrorMessages && bindConfig.shouldShowValidationErrorMessage && (\n          <ValidationErrors\n            className={validationErrorsClassName}\n            validationMode={globals.validationMode}\n            validationErrors={bindConfig.validationErrorMessages}\n            scrollIntoView={globals.scrollValidationErrorsIntoView}\n          />\n        )}\n      </>\n    );\n  }\n  // type assertion to ensure generic works with RefForwarded component\n  // DO NOT CHANGE TYPE WITHOUT CHANGING THIS, FIND TYPE BY INSPECTING React.forwardRef\n) as (<TBind extends NullOrUndefined<boolean>>(\n  props: ArmstrongFCProps<ISwitchProps<TBind>, HTMLInputElement>\n) => ArmstrongFCReturn) &\n  ArmstrongFCExtensions<ISwitchProps<NullOrUndefined<boolean>>>;\n\nSwitch.displayName = 'Switch';\n"],"names":["$6be4966fd9bbc698$var$SWITCH_NAME","$6be4966fd9bbc698$var$createSwitchContext","$6be4966fd9bbc698$export$cf7f5f17f69cbd43","$irPIl$createContextScope","$6be4966fd9bbc698$var$SwitchProvider","$6be4966fd9bbc698$var$useSwitchContext","$6be4966fd9bbc698$export$b5d5cf8927ab7262","$irPIl$forwardRef","props","forwardedRef","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","switchProps","button","setButton","$irPIl$useState","composedRefs","$irPIl$useComposedRefs","node","hasConsumerStoppedPropagationRef","$irPIl$useRef","isFormControl","checked","setChecked","$irPIl$useControllableState","$irPIl$createElement","$irPIl$Primitive","$irPIl$babelruntimehelpersesmextends","$6be4966fd9bbc698$var$getState","$irPIl$composeEventHandlers","event","prevChecked","$6be4966fd9bbc698$var$BubbleInput","$6be4966fd9bbc698$var$THUMB_NAME","$6be4966fd9bbc698$export$4d07bf653ea69106","thumbProps","context","control","bubbles","inputProps","ref","$irPIl$usePrevious","controlSize","$irPIl$useSize","$irPIl$useEffect","input","inputProto","$6be4966fd9bbc698$export$be92b6f5f03c0fe9","$6be4966fd9bbc698$export$6521433ed15a34db","Switch","React.forwardRef","bind","className","labelClassName","label","validationErrorMessages","validationErrorsClassName","scrollValidationErrorsIntoView","validationMode","displaySize","labelId","requiredIndicator","nativeProps","generatedId","React.useId","id","globals","useArmstrongConfig","boundValue","setBoundValue","bindConfig","useBindingState","onCheckedChangeInternal","React.useCallback","newValue","jsxs","Fragment","concat","jsx","Root","Thumb","Label","ValidationErrors"],"mappings":"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","x_google_ignoreList":[0]}