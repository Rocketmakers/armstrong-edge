import{j as n}from"./jsx-runtime-Cl2eCCBe.js";import{r as w}from"./index-Cqyox1Tj.js";import{c as u}from"./index-Dv9et24K.js";import{S as P}from"./spinner.component-Bc6RftQo.js";import{u as T}from"./config.context-B61qZkrf.js";const i=w.forwardRef((m,p)=>{const{className:c,disabled:t,displayStyle:g,displaySize:y,displayStatus:f,pending:e,pendingPosition:s,disableOnPending:b,leftOverlay:l,rightOverlay:r,children:v,...o}=m,a=T({buttonDisplaySize:y,buttonDisplayStyle:g,buttonPendingPosition:s,disableControlOnPending:b}),d=n.jsx(P,{className:u("arm-button-spinner",`arm-button-${s}-icon`),role:"status"}),h=l&&n.jsx("span",{className:"arm-button-left-icon",children:l}),S=r&&n.jsx("span",{className:"arm-button-right-icon",children:r});return n.jsxs("button",{className:u("arm-button",c),"data-pending":e,"data-disabled":t||a.disableControlOnPending&&e,"data-size":a.buttonDisplaySize,"data-style":a.buttonDisplayStyle,"data-status":f,disabled:t||e,tabIndex:t?-1:o.tabIndex,ref:p,...o,children:[e&&a.buttonPendingPosition==="left"?d:h,n.jsx("span",{className:"arm-button-contents",children:v}),e&&a.buttonPendingPosition==="right"?d:S]})});i.defaultProps={pendingPosition:"right"};i.displayName="Button";i.__docgenInfo={description:"Renders an HTML button element with some useful additions",methods:[],displayName:"Button",props:{className:{required:!1,tsType:{name:"string"},description:"CSS className property"},pending:{required:!1,tsType:{name:"boolean"},description:"show a spinner and disable"},pendingPosition:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"show a spinner and disable",defaultValue:{value:"'right'",computed:!1}},disableOnPending:{required:!1,tsType:{name:"boolean"},description:"when pending is true should also disable the input"},disabled:{required:!1,tsType:{name:"boolean"},description:"disable use"},displayStyle:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'outline' | 'blank' | CustomString",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'outline'"},{name:"literal",value:"'blank'"},{name:"literal",value:"`custom-${string}`"}]},description:"which style variant to use"},displaySize:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large' | CustomString",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"},{name:"literal",value:"`custom-${string}`"}]},description:"which size variant to use"},displayStatus:{required:!1,tsType:{name:"union",raw:"'normal' | 'positive' | 'negative' | 'warning' | 'info' | CustomString",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'positive'"},{name:"literal",value:"'negative'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'info'"},{name:"literal",value:"`custom-${string}`"}]},description:"which status variant to use"},leftOverlay:{required:!1,tsType:{name:"JSX.Element"},description:"icon definition for left icon, optionally uses custom JSX"},rightOverlay:{required:!1,tsType:{name:"JSX.Element"},description:"icon definition for right icon, optionally uses custom JSX"}},composes:["ButtonHTMLProps"]};export{i as B};
