{"version":3,"file":"formCustomInput.stories-374d6834.js","sources":["../../src/form/examples.tsx","../../src/form/formCustomInput.stories.mdx"],"sourcesContent":["import * as React from 'react';\n\nimport type { BindingToolsArray, BindingToolsStandard, HookReturn, IBindingProps, IFormConfig } from './types';\n\nexport const ConfigExample: React.FC<IFormConfig<unknown>> = () => null;\nexport const HookReturnExample: React.FC<HookReturn<{}>> = () => null;\nexport const FormPropExample: React.FC<BindingToolsStandard<unknown>> = () => null;\nexport const FormPropArrayExample: React.FC<\n  Omit<BindingToolsArray<unknown>, keyof BindingToolsStandard<unknown>>\n> = () => null;\nexport const BindPropsExample: React.FC<IBindingProps<unknown>> = () => null;\n","import { Meta, Canvas, ArgTypes } from '@storybook/addon-docs';\nimport { ConfigExample, HookReturnExample, FormPropExample, FormPropArrayExample, BindPropsExample } from './examples';\n\n<Meta title=\"Form/Form Custom Inputs\" />\n\n## <a name=\"custom-inputs\">Custom Inputs</a>\n\nCreating an input that can be bound to a form property is as simple as creating a component with a bind prop that supplies the expected type as a generic.\n\nThe Armstrong form library also supplies a hook that helps convert the complex binding tools into a simple value/setter.\n\nAt it's simplest, this is a text input component expecting a `string` as it's bound property:\n\n```tsx\ninterface ICustomTextInputProps {\n  bind: IBindingProps<string>; // the \"string\" here can be any type, and should match the type expected in the form data.\n}\n\nconst CustomTextInput: React.FC<ICustomTextInputProps> = props => {\n  const [boundValue, boundOnChange, { myValidationErrorMessages }] = useBindingState(props.bind);\n\n  return (\n    <>\n      <input type=\"text\" value={boundValue} onChange={boundOnChange} />\n\n      <ValidationErrors validationErrors={myValidationErrorMessages} />\n    </>\n  );\n};\n```\n\nThere are plenty of advanced tools within the bind prop, and the use of the `useBindingState` prop is entirely optional, as long as you're careful to implement the features of the form binder within your custom input then you're good to go!\n\nHere's the full list of tools contained within a `bind` that your custom inputs can interface with:\n\n<ArgTypes of={BindPropsExample} />\n"],"names":["ConfigExample","HookReturnExample","FormPropExample","FormPropArrayExample","BindPropsExample","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","ArgTypes","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"2jBAIO,MAAAA,EAAA,IAAA,KACAC,EAAA,IAAA,KACAC,EAAA,IAAA,KACAC,EAAA,IAAA,KAGAC,EAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sPCJP,SAASC,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,EAAG,IACH,KAAM,OACN,IAAK,KACN,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAoBG,EAAMC,EAAW,CACnC,SAAU,CAAcC,EAAKC,EAAM,CACjC,MAAO,yBACR,CAAA,EAAG;AAAA,EAAmBD,EAAKJ,EAAY,GAAI,CAC1C,GAAI,gBACJ,SAAuBI,EAAK,IAAK,CAC/B,KAAM,gBACN,SAAU,eAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBA,EAAKJ,EAAY,EAAG,CACzC,SAAU,4JACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,0HACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,gEAA8EI,EAAKJ,EAAY,KAAM,CAC9G,SAAU,QACX,CAAA,EAAG,0BAA0B,CAC/B,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,+EAA6FI,EAAKJ,EAAY,KAAM,CAC7H,SAAU,iBACX,CAAA,EAAG,qJAAqJ,CAC1J,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,oDAAkEI,EAAKJ,EAAY,KAAM,CAClG,SAAU,MACX,CAAA,EAAG,8CAA8C,CACxD,CAAK,EAAG;AAAA,EAAmBI,EAAKE,EAAU,CACpC,GAAIT,CACV,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASU,EAAWR,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASS,CACb,EAAM,OAAO,OAAO,CAAE,EAAEP,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOS,EAAyBJ,EAAKI,EAAW,CAC9C,GAAGT,EACH,SAAuBK,EAAKN,EAAmB,CAC7C,GAAGC,CACT,CAAK,CACL,CAAG,EAAID,EAAkBC,CAAK,CAC9B,CAEY,MAACU,EAAS,IAAM,CAC1B,MAAM,IAAI,MAAM,iBAAiB,CACnC,EACAA,EAAO,WAAa,CAClB,SAAU,EACZ,EACK,MAACC,EAAgB,CACpB,MAAO,0BACP,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,QAAQ,CAC3B,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAC9B,GAAIA,EAAc,WAAW,MAAQ,GACrC,KAAMH,CACR,EAC4B,MAAAI,EAAA,CAAA,QAAA"}